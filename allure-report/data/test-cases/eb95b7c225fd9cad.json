{"uid":"eb95b7c225fd9cad","name":"test_register[chromium-Ничего не поставлено-Галочка поставленна в поле соглашения-Введен набор цифр \"123\"-Введено \"maks@\"-Выбран пункт меню-Правильное имя компании \"ООО \"Макс\"\"-Незаполненное поле]","fullName":"test_page#test_register","historyId":"dd79c5f5b1018a0616d4cd99362de174","time":{"start":1664206924024,"stop":1664206931328,"duration":7304},"status":"broken","statusMessage":"playwright._impl._api_types.TimeoutError: Timeout 3500ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"div.lp-content\" to be visible\n============================================================","statusTrace":"page = <Page url='https://scan-interfax.ru/'>, Name = None, Company = 'ООО \"Макс\"', Division = 'PR', Email = 'maks@', Phone = '123', Confirm = True, Subscribe = False\n\n    @pytest.mark.parametrize('Name', [\"Макс\", None], ids=['Правильное имя \"Макс\"', 'Незаполненное поле'])\n    @pytest.mark.parametrize('Company', [\"ООО \\\"Макс\\\"\", None], ids=['Правильное имя компании \"ООО \\\"Макс\\\"\"',\n                                                                     'Незаполненное поле'])\n    @pytest.mark.parametrize('Division', [\"PR\", None], ids=['Выбран пункт меню', 'Не выбран ни один пункт меню'])\n    @pytest.mark.parametrize('Email', [\"Maks@Maks.ru\", \"maks@\", None], ids=['Правильно введенный email', 'Введено \"maks@\"',\n                                                                                    'Ничего не введено'])\n    @pytest.mark.parametrize('Phone', [\"79009009090\", \"123\", None], ids=['Введен телефон правильного формата',\n                                                                         'Введен набор цифр \"123\"', 'Ничего не введено'])\n    @pytest.mark.parametrize('Confirm', [True, False], ids=['Галочка поставленна в поле соглашения','Ничего не поставлено'])\n    @pytest.mark.parametrize('Subscribe', [True, False], ids=['Галочка поставленна в поле рассылки','Ничего не поставлено'])\n    def test_register(page: Page, Name, Company, Division, Email, Phone, Confirm, Subscribe):\n        test_page = TestPage(page)\n        test_page.navigate()\n>       fill_register(test_page, name=Name, company=Company, division=Division, email=Email, phone=Phone, confirm=Confirm,\n                      subscribe=Subscribe)\n\ntest_page.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_page.py:14: in fill_register\n    if key == \"company\" and value is not None: test_page.company_field.fill(value)\nmodels\\TestPage.py:23: in company_field\n    return self.user_form.wait_for_selector('input[name=\\'company\\']')\nmodels\\TestPage.py:15: in user_form\n    return self.page.wait_for_selector('div.lp-content')\nvenv\\lib\\site-packages\\playwright\\sync_api\\_generated.py:6581: in wait_for_selector\n    self._sync(\nvenv\\lib\\site-packages\\playwright\\_impl\\_page.py:367: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_frame.py:307: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:43: in send\n    return await self._connection.wrap_api_call(\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:387: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Channel object at 0x0000026AE6EF5DC0>, method = 'waitForSelector', params = {'selector': 'div.lp-content'}, return_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.TimeoutError: Timeout 3500ms exceeded.\nE       =========================== logs ===========================\nE       waiting for selector \"div.lp-content\" to be visible\nE       ============================================================\n\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:78: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_type_launch_args","time":{"start":1664205504197,"stop":1664205504197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"playwright","time":{"start":1664205504197,"stop":1664205504515,"duration":318},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_url","time":{"start":1664205504197,"stop":1664205504197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"delete_output_dir","time":{"start":1664205504197,"stop":1664205504197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"_verify_url","time":{"start":1664205504197,"stop":1664205504197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"pytestconfig","time":{"start":1664205504197,"stop":1664205504197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"browser_type","time":{"start":1664205504515,"stop":1664205504515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"browser","time":{"start":1664205504515,"stop":1664205504730,"duration":215},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"launch_browser","time":{"start":1664205504515,"stop":1664205504515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"browser_context_args","time":{"start":1664205504730,"stop":1664205504730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"device","time":{"start":1664205504730,"stop":1664205504730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"context","time":{"start":1664206923938,"stop":1664206923949,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"page","time":{"start":1664206923950,"stop":1664206924023,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"playwright._impl._api_types.TimeoutError: Timeout 3500ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"div.lp-content\" to be visible\n============================================================","statusTrace":"page = <Page url='https://scan-interfax.ru/'>, Name = None, Company = 'ООО \"Макс\"', Division = 'PR', Email = 'maks@', Phone = '123', Confirm = True, Subscribe = False\n\n    @pytest.mark.parametrize('Name', [\"Макс\", None], ids=['Правильное имя \"Макс\"', 'Незаполненное поле'])\n    @pytest.mark.parametrize('Company', [\"ООО \\\"Макс\\\"\", None], ids=['Правильное имя компании \"ООО \\\"Макс\\\"\"',\n                                                                     'Незаполненное поле'])\n    @pytest.mark.parametrize('Division', [\"PR\", None], ids=['Выбран пункт меню', 'Не выбран ни один пункт меню'])\n    @pytest.mark.parametrize('Email', [\"Maks@Maks.ru\", \"maks@\", None], ids=['Правильно введенный email', 'Введено \"maks@\"',\n                                                                                    'Ничего не введено'])\n    @pytest.mark.parametrize('Phone', [\"79009009090\", \"123\", None], ids=['Введен телефон правильного формата',\n                                                                         'Введен набор цифр \"123\"', 'Ничего не введено'])\n    @pytest.mark.parametrize('Confirm', [True, False], ids=['Галочка поставленна в поле соглашения','Ничего не поставлено'])\n    @pytest.mark.parametrize('Subscribe', [True, False], ids=['Галочка поставленна в поле рассылки','Ничего не поставлено'])\n    def test_register(page: Page, Name, Company, Division, Email, Phone, Confirm, Subscribe):\n        test_page = TestPage(page)\n        test_page.navigate()\n>       fill_register(test_page, name=Name, company=Company, division=Division, email=Email, phone=Phone, confirm=Confirm,\n                      subscribe=Subscribe)\n\ntest_page.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_page.py:14: in fill_register\n    if key == \"company\" and value is not None: test_page.company_field.fill(value)\nmodels\\TestPage.py:23: in company_field\n    return self.user_form.wait_for_selector('input[name=\\'company\\']')\nmodels\\TestPage.py:15: in user_form\n    return self.page.wait_for_selector('div.lp-content')\nvenv\\lib\\site-packages\\playwright\\sync_api\\_generated.py:6581: in wait_for_selector\n    self._sync(\nvenv\\lib\\site-packages\\playwright\\_impl\\_page.py:367: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_frame.py:307: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:43: in send\n    return await self._connection.wrap_api_call(\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:387: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Channel object at 0x0000026AE6EF5DC0>, method = 'waitForSelector', params = {'selector': 'div.lp-content'}, return_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(self._guid, method, params)\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._api_types.TimeoutError: Timeout 3500ms exceeded.\nE       =========================== logs ===========================\nE       waiting for selector \"div.lp-content\" to be visible\nE       ============================================================\n\nvenv\\lib\\site-packages\\playwright\\_impl\\_connection.py:78: TimeoutError","steps":[{"name":"fill_register","time":{"start":1664206927813,"stop":1664206931327,"duration":3514},"status":"broken","statusMessage":"playwright._impl._api_types.TimeoutError: Timeout 3500ms exceeded.\n=========================== logs ===========================\nwaiting for selector \"div.lp-content\" to be visible\n============================================================\n","statusTrace":"  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\test_page.py\", line 14, in fill_register\n    if key == \"company\" and value is not None: test_page.company_field.fill(value)\n  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\models\\TestPage.py\", line 23, in company_field\n    return self.user_form.wait_for_selector('input[name=\\'company\\']')\n  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\models\\TestPage.py\", line 15, in user_form\n    return self.page.wait_for_selector('div.lp-content')\n  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\venv\\lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 6581, in wait_for_selector\n    self._sync(\n  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\venv\\lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 104, in _sync\n    return task.result()\n  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\venv\\lib\\site-packages\\playwright\\_impl\\_page.py\", line 367, in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\n  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\venv\\lib\\site-packages\\playwright\\_impl\\_frame.py\", line 307, in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\venv\\lib\\site-packages\\playwright\\_impl\\_connection.py\", line 43, in send\n    return await self._connection.wrap_api_call(\n  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\venv\\lib\\site-packages\\playwright\\_impl\\_connection.py\", line 387, in wrap_api_call\n    return await cb()\n  File \"C:\\Users\\Max\\PycharmProjects\\tests\\playwrightTests\\JobTest\\venv\\lib\\site-packages\\playwright\\_impl\\_connection.py\", line 78, in inner_send\n    result = next(iter(done)).result()\n","steps":[],"attachments":[],"parameters":[{"name":"test_page","value":"<models.TestPage.TestPage object at 0x0000026AE6E25E80>"},{"name":"name","value":"None"},{"name":"company","value":"'ООО \"Макс\"'"},{"name":"division","value":"'PR'"},{"name":"email","value":"'maks@'"},{"name":"phone","value":"'123'"},{"name":"confirm","value":"True"},{"name":"subscribe","value":"False"}],"stepsCount":0,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true},"afterStages":[{"name":"page::0","time":{"start":1664206931489,"stop":1664206931489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"context::0","time":{"start":1664206931490,"stop":1664206931500,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"browser::0","time":{"start":1664207813277,"stop":1664207813321,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"playwright::0","time":{"start":1664207813341,"stop":1664207813356,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"suite","value":"test_page"},{"name":"host","value":"HOME-PC"},{"name":"thread","value":"17380-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Company","value":"'ООО \"Макс\"'"},{"name":"Confirm","value":"True"},{"name":"Division","value":"'PR'"},{"name":"Email","value":"'maks@'"},{"name":"Name","value":"None"},{"name":"Phone","value":"'123'"},{"name":"Subscribe","value":"False"},{"name":"browser_name","value":"'chromium'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"eb95b7c225fd9cad.json","parameterValues":["'ООО \"Макс\"'","True","'PR'","'maks@'","None","'123'","False","'chromium'"]}